Tratamento de Texto

IsLetter -> caracteres A-Z
IsUpper  -> Maiusculas
IsLower  -> Minusculas
IsDigit  -> 0 a 9
IsLetterOrDigit -> Letras e numeros
IsNumber -> Todos os digitos + unicode + caracteres romanos
IsSeparator -> Espaço + caracteres unicode de espaço
IsWhiteSpace -> Todos os separadores + \n,\r,\t,\f e \v
IsPunctuation -> Simbolos utilizados para pontuação
IsSymbol -> "Todos" os simbolos (matematica, modificaçoes, etc)
IsControl -> Caracteres não impressos de controlo (\n,\r,\t,to)

CRIAR STRINGS

String S1="Hello";
String S2="Primeira linha \r\nSegunda Linha";

->Criar uma string de caracteres
Console.Write (new string ('*',10));
	//**********
	
-> Null e Strings vazias
String empty=" ";
Console.Writeline (empty=="");//true
Console.Writeline (empty==String.Empty);//true
Console.Writeline (empty.Length==0);//true

->Aceder a caracteres numa Sting
String Str="abcde";
Char letter=Str[1]; //Letter==b
->como string é um conjuto caracteres 
foreach (char c in "Aula")
	Console.Writeline(c+",");
		//A,u,l,a,
		
		
-> Pesquisar dentro de uma String
Console.Writeline ("Aula de Programação".Contains ("de")); //true
 

Console.Writeline ("Aula de programação".Endwith ("Programação")); //true

Console.Writeline ("abcde",UndexOf("cd"();


TRATAMENTO DE Texto

StartsWith
Endswith		Permitem efetuar comparações
IndexOf

Console.Writeline ("abcde".IndexOf("CD", StringComparison.CurrentCultureIgnoewCase)); //2

LastIndexOf <- Conta da direita para a esquerda
IndexOfAny  <- Retorna a promeira posição que encontrar (esq ou dir)
Console.Writeline ("ab,cd ef".IndexOFAny(new char[] {' ',' , '})); //2

Console.Writeline ("pas5W0rd".IndexOfAny("0123456789".ToCharAway()));

Manipular Strigs

->substrings

String left3 ="12345".SubString(0,3); //left3="123"
String mid3 ="12345".SubString(1,3); //left3="234"
String end ="12345".SubString(2); //end="345"

-> Inserir e Remover

String S1 ="HelloWorld2.Insert (5,",");
String S2 =S1.Remove (5,2);
	//s2="HelloWorld";
